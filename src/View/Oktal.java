/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import konversibilangan.KonversiBilangan;

/**
 *
 * @author AINAN-Gaul
 */
public class Oktal extends javax.swing.JInternalFrame {

    /**
     * Creates new form Oktal
     */
    public Oktal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputOktal = new javax.swing.JTextField();
        OktalBiner = new javax.swing.JButton();
        OktalDesimal = new javax.swing.JButton();
        OktalHexa = new javax.swing.JButton();
        outputOktal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Konversi Bilangan Oktal");
        setToolTipText("");
        setEnabled(false);
        setMinimumSize(new java.awt.Dimension(250, 150));
        setPreferredSize(new java.awt.Dimension(400, 250));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        inputOktal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputOktalActionPerformed(evt);
            }
        });
        getContentPane().add(inputOktal, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 320, 30));

        OktalBiner.setText("Biner");
        OktalBiner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OktalBinerActionPerformed(evt);
            }
        });
        getContentPane().add(OktalBiner, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 140, -1));

        OktalDesimal.setText("Desimal");
        OktalDesimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OktalDesimalActionPerformed(evt);
            }
        });
        getContentPane().add(OktalDesimal, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 140, -1));

        OktalHexa.setText("Heksadesimal");
        OktalHexa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OktalHexaActionPerformed(evt);
            }
        });
        getContentPane().add(OktalHexa, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 140, -1));

        outputOktal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputOktalActionPerformed(evt);
            }
        });
        getContentPane().add(outputOktal, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 120, 30));

        jLabel1.setText("Masukkan bilangan biner:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jLabel2.setText("Hasil:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputOktalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputOktalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputOktalActionPerformed

    private void OktalBinerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OktalBinerActionPerformed
        // TODO add your handling code here:
        KonversiBilangan kb = new KonversiBilangan();
        String input = inputOktal.getText();
        int okt = Integer.parseInt(input);
        String hasil = kb.OktaltoBiner(okt);
        outputOktal.setText(hasil);
    }//GEN-LAST:event_OktalBinerActionPerformed

    private void OktalDesimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OktalDesimalActionPerformed
        // TODO add your handling code here:
        KonversiBilangan kb = new KonversiBilangan();
        String input = inputOktal.getText();
        int okt = Integer.parseInt(input);
        int hasil = kb.OktaltoDesimal(okt);
        outputOktal.setText(Integer.toString(hasil));
    }//GEN-LAST:event_OktalDesimalActionPerformed

    private void OktalHexaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OktalHexaActionPerformed
        // TODO add your handling code here:
        KonversiBilangan kb = new KonversiBilangan();
        String input = inputOktal.getText();
        int okt = Integer.parseInt(input);
        String hasil = kb.OktaltoHexa(okt);
        outputOktal.setText(hasil);
    }//GEN-LAST:event_OktalHexaActionPerformed

    private void outputOktalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputOktalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_outputOktalActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OktalBiner;
    private javax.swing.JButton OktalDesimal;
    private javax.swing.JButton OktalHexa;
    private javax.swing.JTextField inputOktal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField outputOktal;
    // End of variables declaration//GEN-END:variables
}
